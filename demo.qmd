 
```{.java .numberLines #lst-demo caption="demo title"}
package com.example.demo;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.example.demo.entity.User;
import com.example.demo.mapper.UserMapper;
import org.junit.Assert;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

@RunWith(SpringRunner.class)
@SpringBootTest
class DemoApplicationTests {

    @Autowired
    private UserMapper userMapper;

    @Test
    public void testSelect() {
        {
            System.out.println(("---- 查询所有记录 ----"));
            List<User> userList = userMapper.selectList(null);
            Assert.assertEquals(4, userList.size());
            userList.forEach(System.out::println);
        }

        {
            System.out.println(("---- 条件查询 ----"));
            QueryWrapper<User> queryWrapper = new QueryWrapper<>();
            queryWrapper.like("login_name", "137");
            List<User> userList = userMapper.selectList(queryWrapper);
            Assert.assertEquals(2, userList.size());
            userList.forEach(System.out::println);
        }

        {
            System.out.println(("---- 安全条件查询 ----"));
            LambdaQueryWrapper<User> queryWrapper = new LambdaQueryWrapper<>();
            queryWrapper.like(User::getLoginName, "137");
            List<User> userList = userMapper.selectList(queryWrapper);
            Assert.assertEquals(2, userList.size());
            userList.forEach(System.out::println);
        }

        {
            System.out.println(("---- 安全条件查询 ----"));
            LambdaQueryWrapper<User> queryWrapper = Wrappers.<User>lambdaQuery();
            queryWrapper.like(User::getLoginName, "137");
            List<User> userList = userMapper.selectList(queryWrapper);
            Assert.assertEquals(2, userList.size());
            userList.forEach(System.out::println);
        }

        {
            System.out.println(("---- 分页查询 ----"));
            QueryWrapper<User> queryWrapper = new QueryWrapper<>();
            queryWrapper.like("login_name", "137");
            Page<User> page = new Page<>(0, 2);
            IPage<User> ipage = userMapper.selectPage(page, queryWrapper);
            System.out.println("总页数：" + ipage.getPages());
            System.out.println("总记录数：" + ipage.getTotal());
            System.out.println("当前页码：" + ipage.getCurrent());
            ipage.getRecords().forEach(System.out::println);
        }

        {
            System.out.println(("---- 分页查询 ----"));
            LambdaQueryWrapper<User> queryWrapper = Wrappers.<User>lambdaQuery();
            queryWrapper.like(User::getLoginName, "137");
            Page<User> page = new Page<>(1, 2);
            IPage<User> ipage = userMapper.selectPage(page, queryWrapper);
            System.out.println("总页数：" + ipage.getPages());
            System.out.println("总记录数：" + ipage.getTotal());
            System.out.println("当前页码：" + ipage.getCurrent());
            ipage.getRecords().forEach(System.out::println);
        }

        {
            System.out.println(("---- 分页查询 ----"));
            LambdaQueryWrapper<User> queryWrapper = Wrappers.<User>lambdaQuery();
            queryWrapper.like(User::getLoginName, "137");
            Page<User> page = new Page<>(2, 2);
            IPage<User> ipage = userMapper.selectPage(page, queryWrapper);
            System.out.println("总页数：" + ipage.getPages());
            System.out.println("总记录数：" + ipage.getTotal());
            System.out.println("当前页码：" + ipage.getCurrent());
            ipage.getRecords().forEach(System.out::println);
        }
    }
}
```